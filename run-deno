#!/usr/bin/env -S deno run --allow-all --unstable --no-check

import WASI from "https://deno.land/std/wasi/snapshot_preview1.ts";

if (Deno.args[0] == "-V") {
  const process = await Deno.run({
    cmd: [
      Deno.execPath(),
      "-V",
    ],
    stdout: "inherit",
  });

  const status = await process.status();
  Deno.exit(status.code);
}

const options = {
  args: [],
  env: {},
  preopens: {},
};

const inputs = [];
const args = process.argv.slice(2);
while (args.length > 0) {
  const arg = args.shift();
  switch (arg) {
    case "--dir":
      const dir = args.shift();
      options.preopens[dir] = dir;
      break;

    case "--env":
      const [ key, value ] = args.shift().split("=");
      options.env[key] = value;
      break;

    case "--":
      options.args.push(...args.splice(0, args.length));
      break;

    default:
      inputs.push(arg);
      break;
  }
}


const wasi = new WASI(options);

const importObject = { wasi_snapshot_preview1: wasi.exports };

const wasm = await WebAssembly.compile(Deno.readFileSync(inputs[0]));
const instance = await WebAssembly.instantiate(wasm, importObject);

wasi.start(instance);
