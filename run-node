#!/usr/bin/env -S node --experimental-wasi-unstable-preview1 --no-warnings

const { spawnSync } = require("child_process");
const { readFileSync } = require("fs");

const { WASI } = require("wasi");

if (process.argv[2] == "-V") {
  const result = spawnSync(process.argv[0], ["--version"], {
    stdio: "pipe",
    encoding: "utf-8",
  });

  process.stdout.write(`node ${result.stdout.slice(1)}`);
  process.exit(result.status);
}

const options = {
  args: [],
  env: {},
  preopens: {},
};

const inputs = [];
const args = process.argv.slice(2);
while (args.length > 0) {
  const arg = args.shift();
  switch (arg) {
    case "--dir":
      const dir = args.shift();
      options.preopens[dir] = dir;
      break;

    case "--env":
      const [ key, value ] = args.shift().split("=");
      options.env[key] = value;
      break;

    case "--":
      options.args.push(...args.splice(0, args.length));
      break;

    default:
      if (options.args.length == 0) {
        options.args.push(arg);
      }

      inputs.push(arg);
      break;
  }
}

const wasi = new WASI(options);

const importObject = { wasi_snapshot_preview1: wasi.wasiImport };

const wasm = new WebAssembly.Module(readFileSync(inputs[0]));
const instance = new WebAssembly.Instance(wasm, importObject);

wasi.start(instance);
